
# Copyright 2021 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


load("//bazel:ppu.bzl", "ppu_cc_library", "ppu_cc_test")

package(default_visibility = ["//visibility:public"])

ppu_cc_library(
    name = "io_interface",
    hdrs = ["io_interface.h"],
    deps = [
        "//ppu/core",
    ],
)

ppu_cc_library(
    name = "io_test",
    testonly = 1,
    srcs = ["io_test.cc"],
    hdrs = ["io_test.h"],
    deps = [
        ":io_interface",
        "//ppu/mpc/util:test_util",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)

ppu_cc_library(
    name = "factory",
    srcs = ["factory.cc"],
    hdrs = ["factory.h"],
    deps = [
        "//ppu:ppu_cc_proto",
        "//ppu/mpc/aby3",
        "//ppu/mpc/cheetah",
        "//ppu/mpc/ref2k",
        "//ppu/mpc/semi2k",
    ],
)

ppu_cc_library(
    name = "kernel",
    srcs = ["kernel.cc"],
    hdrs = ["kernel.h"],
    deps = [
        "//ppu/core:array_ref",
        "//ppu/core:type",
        "//ppu/mpc/util:cexpr",
    ],
)

ppu_cc_library(
    name = "object",
    srcs = ["object.cc"],
    hdrs = ["object.h"],
    deps = [
        ":kernel",
    ],
)

ppu_cc_library(
    name = "abkernels",
    srcs = ["abkernels.cc"],
    hdrs = ["abkernels.h"],
    deps = [
        ":object",
    ],
)

ppu_cc_library(
    name = "interfaces",
    srcs = ["interfaces.cc"],
    hdrs = ["interfaces.h"],
    deps = [
        ":object",
    ],
)

ppu_cc_library(
    name = "compute_test",
    testonly = 1,
    srcs = ["compute_test.cc"],
    hdrs = ["compute_test.h"],
    deps = [
        ":interfaces",
        ":object",
        "//ppu/mpc/util:communicator",
        "//ppu/mpc/util:test_util",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)

ppu_cc_library(
    name = "arithmetic_test",
    testonly = 1,
    srcs = ["arithmetic_test.cc"],
    hdrs = ["arithmetic_test.h"],
    deps = [
        ":interfaces",
        ":object",
        "//ppu/mpc/util:communicator",
        "//ppu/mpc/util:test_util",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)

ppu_cc_library(
    name = "boolean_test",
    testonly = 1,
    srcs = ["boolean_test.cc"],
    hdrs = ["boolean_test.h"],
    deps = [
        ":interfaces",
        ":object",
        "//ppu/mpc/util:communicator",
        "//ppu/mpc/util:test_util",
        "@com_google_googletest//:gtest",
    ],
    alwayslink = True,
)

ppu_cc_library(
    name = "prg_state",
    srcs = ["prg_state.cc"],
    hdrs = ["prg_state.h"],
    deps = [
        "//ppu/core",
        "//ppu/crypto:pseudo_random_generator",
        "//ppu/link",
        "//ppu/mpc:kernel",
        "//ppu/mpc:object",
        "//ppu/utils:rand",
    ],
)

ppu_cc_library(
    name = "compute_bench",
    srcs = ["compute_bench.cc"],
    hdrs = ["compute_bench.h"],
    deps = [
        ":interfaces",
        ":object",
        "//ppu/mpc/util:bench_util",
        "//ppu/mpc/util:communicator",
        "@com_github_google_benchmark//:benchmark",
    ],
    alwayslink = True,
)
